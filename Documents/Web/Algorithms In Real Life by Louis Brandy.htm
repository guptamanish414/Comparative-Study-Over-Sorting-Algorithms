<!DOCTYPE html>
<html style=""><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="chrome=1">
    <title>Algorithms In Real Life  by Louis Brandy</title>
    <link rel="stylesheet" href="Algorithms%20In%20Real%20Life%20by%20Louis%20Brandy_files/styles.css">
    <link rel="stylesheet" href="Algorithms%20In%20Real%20Life%20by%20Louis%20Brandy_files/pygment_trac.css">
    <link href="Algorithms%20In%20Real%20Life%20by%20Louis%20Brandy_files/prettify.css" type="text/css" rel="stylesheet">
    <link href="Algorithms%20In%20Real%20Life%20by%20Louis%20Brandy_files/sunburst.css" type="text/css" rel="stylesheet">
    <script src="Algorithms%20In%20Real%20Life%20by%20Louis%20Brandy_files/ga.js" async="" type="text/javascript"></script><script type="text/javascript" src="Algorithms%20In%20Real%20Life%20by%20Louis%20Brandy_files/prettify.js"></script>
    <script src="Algorithms%20In%20Real%20Life%20by%20Louis%20Brandy_files/jquery.js"></script>
    <script src="Algorithms%20In%20Real%20Life%20by%20Louis%20Brandy_files/respond.js"></script>
    <!--[if lt IE 9]>
      <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->
    <!--[if lt IE 8]>
    <link rel="stylesheet" href="/assets/themes/midnight/stylesheets/ie.css">
    <![endif]-->
    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">

  <script>
    function gogo_pretty() {
      $('pre').not('[class="plain"]').addClass('prettyprint'); 
      prettyPrint();
    }
  </script></head>
  
  <body onload="gogo_pretty();">
      <div id="header">
        <nav>
	  <li class="fork"><a href="http://lbrandy.com/"> lbrandy.com</a></li>
          <li class="downloads"><a href="http://lbrandy.com/atom.xml">feed</a></li>
          <li class="downloads"><a href="http://lbrandy.com/about.html">about</a></li>
          <li class="downloads"><a href="http://lbrandy.com/archive.html">archive</a></li>
        </nav>
      </div><!-- end header -->

    <div class="wrapper">

      <section>

        
<div id="title">
  <h1>Algorithms In Real Life </h1>
  <p></p>
  <hr>

<span class="credits right">Posted by <a href="http://lbrandy.com/about.html">Louis Brandy</a> on 20 October 2008</span>
  
</div>

<p>Sometimes I notice computer science or other assorted math nerdery in real life. These are their stories.
</p><h3>Alphabetizing Papers</h3>
Have you ever seen a teacher alphabetizing a couple dozen papers? This 
is basically a sorting problem, right? And you are a computer scientist,
 so sorting problems should be interesting to you. Have you ever 
analyzed how people alphabetize papers? How does she (for the sake of 
brevity I've made the sexist assumption that this teacher is female) do 
it? Almost always, she puts all the 'A' names in this pile, 'B' names in
 that one, and so on. The group ranges my vary (maybe A through C in 
this pile, etc.), but the algorithm is almost always the same. Once 
she's done with that, what does she do? She tends to go letter by letter
 and use some other algorithm on each group. In my experience, she uses 
an <a href="http://en.wikipedia.org/wiki/Insertion_sort">insertion sort</a>.<p></p>

<p>Did it ever strike you as odd that human beings used such an 
algorithm? Did you ever, as a young, naive, computer programmer, snicker
 to yourself thinking that she was using an inferior algorithm? I did. 
Everyone knows that <a href="http://en.wikipedia.org/wiki/Quicksort">quicksort</a>
 is the best and fastest way to sort, right? Why don't teachers use 
quicksort? My original answer to this question was that unlike 
computers, the human brain doesn't do all comparisons equally. It's just
 "easier" for our brains this way. Splitting into letter groups makes 
each smaller problem more manageable.&nbsp; I was certain, in those 
times, there might exist some faster algorithm that teachers could use 
based on a quicksort. I was wrong.</p>

<p>Back to the computer science part: do you know the name of the sorting algorithm that these teachers use? It's called a <a href="http://en.wikipedia.org/wiki/Bucket_sort">bucket sort</a>.
 A bucket sort followed by individual insertion sorts (exactly what 
teachers tend to do) is a linear time sorting algorithm. Yes, linear 
time. Did you know there are linear time sorting algorithms? But you 
thought n*log(n) was the best possible sorting algorithm? That's only 
the bound for comparison based sorting. When you have some notion of the
 distribution of the items to be sorted, you can break through that 
boundary and do linear time sorting. The catch with linear time sorting 
is that the input must follow some known distribution. This, by the way,
 is why teachers instinctively break the piles into various types of 
groupings. If there are alot of papers, you need finer group ranges. 
Furthermore, the ideal bucket setup would distribute the papers roughly 
evenly. The letter S might need its own bucket, but you can put all the 
letters up through F in their own bucket. Teachers have alot of 
experience with both the general problem and their specific problem (for
 example, the peculiarities of a particular class' name distribution) 
and so they are optimizing the algorithm given the known distribution. 
They are setting up the parameters of the linear time sort (number of 
buckets, bucket ranges, etc.) exactly as they should to optimize the 
sort time.</p>

<p>The main downside to these linear sort algorithms is that they 
require alot of extra space (versus comparison-based sorting). You tend 
need to need an auxiliary bookkeeping array on the order of the original
 problem to do them. This isn't a problem in real life! She just needs a
 larger table. In a very real sense, this supposedly "naive" algorithm 
that teachers use is among the very best possible. And woe to any 
computer science student who thinks to himself that she's doing it 
wrong.
</p><h3>The Coffee Problem</h3>
So I woke up the other day, took my shower, got dressed and got on the 
elevator. My apartment complex has complimentary coffee in the lobby 
area (that's why the rent is so high). This particular morning, when I 
got there, I noticed all of the little tags that tell me which dispenser
 was which were missing. So there I stood, with five identical coffee 
dispensers, virtually certain at least one of them was decaf. I don't 
want decaf. What do I do?<p></p>

<p>If I was <a href="http://www.youtube.com/watch?v=_sarYH0z948">David Carruso</a>
 or that dude from CSI: Las Vegas, I could have smelled the coffee, 
detected the bean's nation of origin and deduced which was decaf based 
on the trade distribution of that country's beans throughout the 
continental United States. Or maybe I could have used some nearby 
chemical MacGuyver style to determine which was caffeine. I'm just a 
dude needing caffeine, so I thought for a second, and then went for the 
middle one. How did they likely set these up? It seemed logical to me 
that since there were five, no more than two would be decaf. That seems 
like a good assumption. Furthermore, my "opponent", being a rational 
person, likely put the decafs together, and on one end. That means the 
middle one is probably caffenieted.</p>

<p>(Another good answer I received from someone else is just to mix them all up. At worst you get 60% caffeine.)</p>

<hr>

<div style="height: 20px;">
  
<span class="credits left"><a href="http://lbrandy.com/blog/2008/10/my-first-and-last-webcomic" title="My First and Last Webcomic">← My First and Last Webcomic</a></span>
  

  
<span class="credits right"><a href="http://lbrandy.com/blog/2008/10/how-we-made-our-face-recognizer-25-times-faster" title="How We Made Our Face Recognizer 25x Faster">How We Made Our Face Recognizer 25x Faster →</a></span>
  

</div>

<hr>





	<hr>
          <span class="credits left">© <a href="http://lbrandy.com/about.html">louis brandy</a>
	    —
	    theme: <a href="https://github.com/mattgraham/Midnight">midnight</a>
	    by <a href="http://twitter.com/#%21/michigangraham">mattgraham</a>
	    —
	    with help from <a href="http://jekyllbootstrap.com/" target="_blank" title="The Definitive Jekyll Blogging Framework">jekyll bootstrap</a>
	    and <a href="http://github.com/">github pages</a>
	    </span>
      </section>


    </div>
    <!--[if !IE]><script>fixScale(document);</script><!--<![endif]-->

    


  <script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-4513764-3']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>



  


</body></html>